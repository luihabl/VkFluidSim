#version 450
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_GOOGLE_include_directive : require

#include "common.glsl"

layout(local_size_x = nThreads, local_size_y = 1, local_size_z = 1) in;

void ProcessBoundaries(inout vec2 p, inout vec2 v) {
    if (p.x < ubo.box.x) {
        p.x = ubo.box.x; //2 * ubo.box.x - p.x;
        v.x = -v.x * ubo.damping_factor;
    }

    if (p.y < ubo.box.y) {
        p.y = ubo.box.y; //2*ubo.box.y-p.y;
        v.y = -v.y * ubo.damping_factor;
    }

    if (p.x > ubo.box.x + ubo.box.z) {
        p.x = ubo.box.x + ubo.box.z; //2 * (ubo.box.x + ubo.box.z) - p.x;
        v.x = -v.x * ubo.damping_factor;
    }

    if (p.y > ubo.box.y + ubo.box.w) {
        p.y = ubo.box.y + ubo.box.w; //2 * (ubo.box.y + ubo.box.w) - p.y;
        v.y = -v.y * ubo.damping_factor;
    }
}

vec2 MoveParticle(vec2 pos, vec2 vel) {
    vec2 p;
    p = pos + pc.dt * vel;
    return p;
}

void main() {
    uint id = gl_GlobalInvocationID.x;
    if (id >= pc.n_particles)
        return;

    vec2 pos = pc.positions.data[id];
    vec2 vel = pc.velocities.data[id];

    vec2 new_pos = MoveParticle(pos, vel);
    ProcessBoundaries(new_pos, vel);

    pc.positions.data[id] = new_pos;
    pc.velocities.data[id] = vel;
}
