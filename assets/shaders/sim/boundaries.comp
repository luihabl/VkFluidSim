#version 450
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_GOOGLE_include_directive : require

#include "common.glsl"

layout (local_size_x = nThreads, local_size_y = 1, local_size_z = 1) in;

void processBoundaries(inout vec2 p, inout vec2 v) {
    if(p.x < constants.box.x){
        p.x = 2*constants.box.x-p.x;
        v.x = -v.x;
    }

    if(p.y < constants.box.y){
        p.y = 2*constants.box.y-p.y;
        v.y  = -v.y;
    }

   if(p.x > constants.box.x + constants.box.z){
        p.x = 2*(constants.box.x + constants.box.z) - p.x;
        v.x = -v.x;
    }

    if(p.y > constants.box.y + constants.box.w){
        p.y = 2*(constants.box.y + constants.box.w) - p.y;
        v.y = -v.y;
    }       
}

vec2 moveParticle(vec2 pos, vec2 vel) {
    vec2 p;
    p = pos + pc.dt * vel;
    return p;
}

void main() {
    uint gi  = gl_GlobalInvocationID.x;
    
    if(gi < pc.n_particles) {
        vec2 pos = in_buffers.positions.data[gi];
        vec2 vel = in_buffers.velocities.data[gi];


        // vec2 new_pos = moveParticle(pos, vel);
        processBoundaries(pos, vel);

        out_buffers.positions.data[gi] = pos;
        out_buffers.velocities.data[gi] = vel;
    }
}